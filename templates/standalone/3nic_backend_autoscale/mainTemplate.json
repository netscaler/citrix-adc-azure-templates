{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "130.2020.12.21",
    "parameters": {
        "adminUsername": {
            "type": "String",
            "metadata": {
                "description": "Username for the Virtual Machine."
            }
        },
        "adminPassword": {
            "type": "SecureString",
            "metadata": {
                "description": "Password for the Virtual Machine."
            }
        },
        "vmName": {
            "defaultValue": "Citrix-ADC-VPX",
            "type": "String",
            "metadata": {
                "description": "Name for the Virtual Machine."
            }
        },
        "vmSize": {
            "defaultValue": "Standard_D8s_v4",
            "type": "String",
            "metadata": {
                "description": "Size of Citrix ADC VPX Virtual Machine. Please choose the correct vmSize based on the VPX license and the number of NICs you require. [Learn More](https://docs.citrix.com/en-us/citrix-adc/current-release/deploying-vpx/deploy-vpx-on-azure.html#citrix-adc-vpx-licensing)"
            }
        },
        "ADCVersion": {
            "type": "string",
            "defaultValue": "netscalervpx-131",
            "allowedValues": [
                "netscalervpx-131",
                "netscalervpx-130",
                "netscalervpx-121"
            ],
            "metadata": {
                "description": "Citrix ADC Version. netscalervpx-131 is recommended. Note: 5000Mbps is supported only in 13.1 version."
            }
        },
        "vmSku": {
            "defaultValue": "netscalerbyol",
            "type": "String",
            "allowedValues": [
                "netscalerbyol",
                "netscaler10standard",
                "netscaler10enterprise",
                "netscaler10platinum",
                "netscaler200standard",
                "netscaler200enterprise",
                "netscaler200platinum",
                "netscaler1000standard",
                "netscaler1000enterprise",
                "netscaler1000platinum",
                "netscaler3000standard",
                "netscaler3000enterprise",
                "netscaler3000platinum",
                "netscaler5000standard",
                "netscaler5000enterprise",
                "netscaler5000platinum"
            ],

            "metadata": {
                "description": "SKU of Citrix ADC Image."
            }
        },
        "vnetName": {
            "defaultValue": "vnet01",
            "type": "String",
            "metadata": {
                "description": "Name of Virtual Network"
            }
        },
        "vnetResourceGroup": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Resource Group name of existing Virtual Network. Leave empty if Resource Group is same as current deployment."
            }
        },
        "vnetNewOrExisting": {
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "type": "String"
        },
        "subnetName-management": {
            "defaultValue": "subnet_mgmt",
            "type": "String",
            "metadata": {
                "description": "Name of Management Subnet. Enter existing subnet name if opting for existing Virtual Network"
            }
        },
        "subnetName-client": {
            "defaultValue": "subnet_client",
            "type": "String",
            "metadata": {
                "description": "Name of Client Side subnet. Enter existing subnet name if opting for existing Virtual Network"
            }
        },
        "subnetName-server": {
            "defaultValue": "subnet_server",
            "type": "String",
            "metadata": {
                "description": "Name of Server Side subnet. Enter existing subnet name if opting for existing Virtual Network"
            }
        },
        "subnetAddressPrefix-management": {
            "defaultValue": "10.11.0.0/24",
            "type": "String",
            "metadata": {
                "description": "Value of Management subnet in CIDR form. Ignore this field if opting for existing Virtual Network, Address prefix will be picked from existing Subnet."
            }
        },
        "subnetAddressPrefix-client": {
            "defaultValue": "10.11.1.0/24",
            "type": "String",
            "metadata": {
                "description": "Value of Client side subnet in CIDR form. Ignore this field if opting for existing Virtual Network, Address prefix will be picked from existing Subnet."
            }
        },
        "subnetAddressPrefix-server": {
            "defaultValue": "10.11.2.0/24",
            "type": "String",
            "metadata": {
                "description": "Value of Server Side subnet in CIDR form. Ignore this field if opting for existing Virtual Network, Address prefix will be picked from existing Subnet."
            }
        },
        "acceleratedNetworkingManagement": {
            "type": "Bool",
            "defaultValue": true,
            "metadata": {
                "description": "Accelerated Networking for Management Interface. Enables low latency and high throughput on the network interface.[Learn more](https://docs.microsoft.com/en-gb/azure/virtual-network/create-vm-accelerated-networking-cli)"
            }
        },
        "acceleratedNetworkingClient": {
            "type": "Bool",
            "defaultValue": true,
            "metadata": {
                "description": "Accelerated Networking for Client Interface. Enables low latency and high throughput on the network interface.[Learn more](https://docs.microsoft.com/en-gb/azure/virtual-network/create-vm-accelerated-networking-cli)"
            }
        },
        "acceleratedNetworkingServer": {
            "type": "Bool",
            "defaultValue": true,
            "metadata": {
                "description": "Accelerated Networking for Server Interface. Enables low latency and high throughput on the network interface.[Learn more](https://docs.microsoft.com/en-gb/azure/virtual-network/create-vm-accelerated-networking-cli)"
            }
        },
        "applicationID": {
            "type": "String",
            "metadata": {
                "description": "Application Id of registered App in Azure Active Directory"
            }
        },
        "ApplicationSecretKey": {
            "type": "SecureString",
            "metadata": {
                "description": "API Access Key/Password Value of registed App in Azure Active Directory"
            }
        }
    },
    "variables": {
        "nicN": "[concat(parameters('vmName'), '-nic')]",
        "nsgN": "[concat(parameters('vmName'), '-nsg')]",
        "mgmt-pipN-suffix": "-mgmt-publicip",
        "saN": "[concat('vpx', uniqueString(resourceGroup().id))]",
        "tenantID": "[subscription().tenantId]",
        "vnetRg": "[if(equals(parameters('vnetResourceGroup'), ''), resourceGroup().name,parameters('vnetResourceGroup'))]",
        "vnetId": "[resourceId(variables('vnetRg'), 'Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
        "snetRef-management": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName-management'))]",
        "snetRef-client": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName-client'))]",
        "snetRef-server": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName-server'))]"
    },
    "resources": [
        {
            "apiVersion": "2020-06-01",
            "name": "pid-7bc6237f-88cb-452c-9909-dc9c017b81c5",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "130.2020.12.21",
                    "resources": []
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('vmName')]",
            "apiVersion": "2017-12-01",
            "location": "[resourceGroup().location]",
            "plan": {
                "name": "[parameters('vmSku')]",
                "publisher": "citrix",
                "product": "[parameters('ADCVersion')]"
            },
            "properties": {
                "osProfile": {
                    "computerName": "[parameters('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "customData": "[base64(concat('{\"username\":\"', parameters('adminUsername'), '\",\"azure_app_config\":{\"tenant_id\":\"', variables('tenantID') ,'\",\"app_id\":\"', parameters('applicationID') ,'\",\"secret_key\":\"', parameters('ApplicationSecretKey') ,'\"},\"vpx_config\":{\"pvt_ip_11\":\"', reference(concat(variables('nicN'), '-client')).ipConfigurations[0].properties.privateIPAddress ,'\",\"pvt_ip_12\":\"', reference(concat(variables('nicN'), '-server')).ipConfigurations[0].properties.privateIPAddress ,'\",\"subnet_11\":\"', reference(variables('snetRef-client'), '2017-10-01', 'Full').properties.addressPrefix ,'\",\"subnet_12\":\"', reference(variables('snetRef-server'), '2017-10-01', 'Full').properties.addressPrefix, '\"}}'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "citrix",
                        "offer": "[parameters('ADCVersion')]",
                        "sku": "[parameters('vmSku')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId( 'Microsoft.Network/networkInterfaces', concat(variables('nicN'), '-management'))]",
                            "properties": {
                                "primary": true
                            }
                        },
                        {
                            "id": "[resourceId( 'Microsoft.Network/networkInterfaces', concat(variables('nicN'), '-client'))]",
                            "properties": {
                                "primary": false
                            }
                        },
                        {
                            "id": "[resourceId( 'Microsoft.Network/networkInterfaces', concat(variables('nicN'), '-server'))]",
                            "properties": {
                                "primary": false
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('saN')), '2017-10-01').primaryEndpoints['blob']]"
                    }
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicN'), '-management')]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicN'), '-client')]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicN'), '-server')]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('saN'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('saN')]",
            "apiVersion": "2017-10-01",
            "kind": "Storage",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS"
            },
            "properties": {}
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('vnetName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('subnetAddressPrefix-management')]",
                        "[parameters('subnetAddressPrefix-client')]",
                        "[parameters('subnetAddressPrefix-server')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('subnetName-management')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnetAddressPrefix-management')]"
                        }
                    },
                    {
                        "name": "[parameters('subnetName-client')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnetAddressPrefix-client')]"
                        }
                    },
                    {
                        "name": "[parameters('subnetName-server')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnetAddressPrefix-server')]"
                        }
                    }
                ]
            },
            "condition": "[equals(parameters('vnetNewOrExisting'),'new')]"
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicN'), '-management')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "enableAcceleratedNetworking": "[parameters('acceleratedNetworkingManagement')]",
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('snetRef-management')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', concat(parameters('vmName'), variables('mgmt-pipN-suffix')))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId( 'Microsoft.Network/networkSecurityGroups', concat(variables('nsgN'), '-management'))]"
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]",
                "[concat('Microsoft.Network/publicIpAddresses/', parameters('vmName'), variables('mgmt-pipN-suffix'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgN'), '-management')]"
            ]
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicN'), '-client')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "enableAcceleratedNetworking": "[parameters('acceleratedNetworkingClient')]",
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('snetRef-client')]"
                            },
                            "privateIPAllocationMethod": "Dynamic"
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId( 'Microsoft.Network/networkSecurityGroups', concat(variables('nsgN'), '-client'))]"
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgN'), '-client')]"
            ]
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicN'), '-server')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "enableAcceleratedNetworking": "[parameters('acceleratedNetworkingServer')]",
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('snetRef-server')]"
                            },
                            "privateIPAllocationMethod": "Dynamic"
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId( 'Microsoft.Network/networkSecurityGroups', concat(variables('nsgN'), '-server'))]"
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgN'), '-server')]"
            ]
        },
        {
            "type": "Microsoft.Network/publicIpAddresses",
            "name": "[concat(parameters('vmName'), variables('mgmt-pipN-suffix'))]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIpAllocationMethod": "Dynamic"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[concat(variables('nsgN'), '-management')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-ssh",
                        "properties": {
                            "priority": 1000,
                            "sourceAddressPrefix": "*",
                            "protocol": "TCP",
                            "destinationPortRange": "22",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    },
                    {
                        "name": "autoscale-daemon",
                        "properties": {
                            "priority": 1001,
                            "sourceAddressPrefix": "*",
                            "protocol": "TCP",
                            "destinationPortRange": "9001",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[concat(variables('nsgN'), '-client')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-ssh",
                        "properties": {
                            "priority": 1000,
                            "sourceAddressPrefix": "*",
                            "protocol": "TCP",
                            "destinationPortRange": "22",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[concat(variables('nsgN'), '-server')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-ssh",
                        "properties": {
                            "priority": 1000,
                            "sourceAddressPrefix": "*",
                            "protocol": "TCP",
                            "destinationPortRange": "22",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    }
                ]
            }
        }
    ]
}
