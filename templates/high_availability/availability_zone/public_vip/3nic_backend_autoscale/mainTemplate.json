{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "130.2020.12.21",
    "parameters": {
        "adminUsername": {
            "type": "String",
            "metadata": {
                "description": "Username for the Virtual Machines."
            }
        },
        "adminPassword": {
            "type": "SecureString",
            "metadata": {
                "description": "Password for the Virtual Machines."
            }
        },
        "rpcNodePassword": {
            "type": "SecureString",
            "metadata": {
                "description": "Password for the RPC Node for communication between primary and secondary VPXs. [Learn More about RPCNode](https://docs.citrix.com/en-us/citrix-adc/current-release/getting-started-with-citrix-adc/change-rpc-node-password.html)"
            }
        },
        "vmSize": {
            "defaultValue": "Standard_D8s_v4",
            "type": "String",
            "metadata": {
                "description": "Size of Citrix ADC VPX Virtual Machine. Please choose the correct vmSize based on the VPX license and the number of NICs you require. [Learn More](https://docs.citrix.com/en-us/citrix-adc/current-release/deploying-vpx/deploy-vpx-on-azure.html#citrix-adc-vpx-licensing)"
            }
        },
        "ADCVersion": {
            "type": "string",
            "defaultValue": "netscalervpx-131",
            "allowedValues": [
                "netscalervpx-131",
                "netscalervpx-130",
                "netscalervpx-121"
            ],
            "metadata": {
                "description": "Citrix ADC Version. netscalervpx-131 is recommended. Note: 5000Mbps is supported only in 13.1 version."
            }
        },
        "vmSku": {
            "defaultValue": "netscalerbyol",
            "type": "String",
            "allowedValues": [
                "netscalerbyol",
                "netscaler10standard",
                "netscaler10enterprise",
                "netscaler10platinum",
                "netscaler200standard",
                "netscaler200enterprise",
                "netscaler200platinum",
                "netscaler1000standard",
                "netscaler1000enterprise",
                "netscaler1000platinum",
                "netscaler3000standard",
                "netscaler3000enterprise",
                "netscaler3000platinum",
                "netscaler5000standard",
                "netscaler5000enterprise",
                "netscaler5000platinum"
            ],
            "metadata": {
                "description": "SKU of Citrix ADC Image."
            }
        },
        "vnetName": {
            "defaultValue": "vnet01",
            "type": "String",
            "metadata": {
                "description": "Name of Virtual Network"
            }
        },
        "vnetResourceGroup": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Resource Group name of existing Virtual Network. Leave empty if Resource Group is same as current deployment."
            }
        },
        "vnetNewOrExisting": {
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "type": "String"
        },
        "snetName-01": {
            "defaultValue": "subnet_mgmt",
            "type": "String",
            "metadata": {
                "description": "Name of Management Subnet. Enter existing subnet name if opting for existing Virtual Network"
            }
        },
        "snetName-11": {
            "defaultValue": "subnet_client",
            "type": "String",
            "metadata": {
                "description": "Name of Client Side subnet. Enter existing subnet name if opting for existing Virtual Network"
            }
        },
        "snetName-12": {
            "defaultValue": "subnet_server",
            "type": "String",
            "metadata": {
                "description": "Name of Server Side subnet. Enter existing subnet name if opting for existing Virtual Network"
            }
        },
        "snetAddressPrefix-01": {
            "defaultValue": "10.11.0.0/24",
            "type": "String",
            "metadata": {
                "description": "Value of Management subnet in CIDR form. Ignore this field if opting for existing Virtual Network, Address prefix will be picked from existing Subnet."
            }
        },
        "snetAddressPrefix-11": {
            "defaultValue": "10.11.1.0/24",
            "type": "String",
            "metadata": {
                "description": "Value of Client side subnet in CIDR form. Ignore this field if opting for existing Virtual Network, Address prefix will be picked from existing Subnet."
            }
        },
        "subnetAddressMask-11": {
            "defaultValue": "255.255.255.0",
            "type": "string",
            "metadata": {
                "description": "Subnet Mask for the above Client side subnet Address Prefix"
            }
        },
        "snetAddressPrefix-12": {
            "defaultValue": "10.11.2.0/24",
            "type": "String",
            "metadata": {
                "description": "Value of Server Side subnet in CIDR form. Ignore this field if opting for existing Virtual Network, Address prefix will be picked from existing Subnet."
            }
        },
        "subnetAddressMask-12": {
            "defaultValue": "255.255.255.0",
            "type": "string",
            "metadata": {
                "description": "Subnet Mask for the above Server side subnet Address Prefix"
            }
        },
        "restrictedSshAccessCIDR": {
            "type": "string",
            "metadata": {
                "description": "Who can access the management interface via SSH? Provide an address range using CIDR notation (e.g. 192.168.99.0/24 or 2001:1234::/64), or an IP address (e.g. 192.168.99.0 or 2001:1234::). You can also provide a comma-separated list of IP addresses or address ranges using either IPv4 or IPv6. "
            }
        },
        "acceleratedNetworkingManagement": {
            "type": "Bool",
            "defaultValue": true,
            "metadata": {
                "description": "Accelerated Networking for Management Interface. Enables low latency and high throughput on the network interface.[Learn more](https://docs.microsoft.com/en-gb/azure/virtual-network/create-vm-accelerated-networking-cli)"
            }
        },
        "acceleratedNetworkingClient": {
            "type": "Bool",
            "defaultValue": true,
            "metadata": {
                "description": "Accelerated Networking for Client Interface. Enables low latency and high throughput on the network interface.[Learn more](https://docs.microsoft.com/en-gb/azure/virtual-network/create-vm-accelerated-networking-cli)"
            }
        },
        "acceleratedNetworkingServer": {
            "type": "Bool",
            "defaultValue": true,
            "metadata": {
                "description": "Accelerated Networking for Server Interface. Enables low latency and high throughput on the network interface.[Learn more](https://docs.microsoft.com/en-gb/azure/virtual-network/create-vm-accelerated-networking-cli)"
            }
        }
    },
    "variables": {
        "vmN": "ns-vpx",
        "nicN": "ns-vpx-nic",
        "nsgN": "ns-vpx-nic-nsg",
        "lbN": "alb",
        "bePoolN": "bepool-11",
        "probeN": "probe-11",
        "ipConfN": "ipconf-11",
        "alb-pipN": "alb-publicip",
        "mgmt-pipN-suffix": "-mgmt-publicip",
        "saN": "[concat('vpxha', uniqueString(resourceGroup().id))]",
        "tenantID": "[subscription().tenantId]",
        "vnetRg": "[if(equals(parameters('vnetResourceGroup'), ''), resourceGroup().name,parameters('vnetResourceGroup'))]",
        "snetRef-01": "[resourceId(variables('vnetRg'),'Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('snetName-01'))]",
        "snetRef-11": "[resourceId(variables('vnetRg'),'Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('snetName-11'))]",
        "snetRef-12": "[resourceId(variables('vnetRg'),'Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('snetName-12'))]",
        "bePoolId": "[resourceId( 'Microsoft.Network/loadBalancers/backendAddressPools', variables('lbN'), variables('bePoolN'))]",
        "probeId": "[resourceId( 'Microsoft.Network/loadBalancers/probes', variables('lbN'), variables('probeN'))]",
        "ipConfId": "[resourceId( 'Microsoft.Network/loadBalancers/frontendIpConfigurations', variables('lbN'), variables('ipConfN'))]"
    },
    "resources": [
        {
            "apiVersion": "2020-06-01",
            "name": "pid-9bdc90d4-c87c-4926-aedc-3f9e624e6603",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "130.2020.12.21",
                    "resources": []
                }
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "name": "[variables('lbN')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('ipConfN')]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId( 'Microsoft.Network/publicIpAddresses', variables('alb-pipN'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('bePoolN')]"
                    }
                ],
                "probes": [
                    {
                        "name": "[variables('probeN')]",
                        "properties": {
                            "protocol": "tcp",
                            "port": 9000,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "lbRule1",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('ipConfId')]"
                            },
                            "frontendPort": 80,
                            "backendPort": 80,
                            "enableFloatingIP": true,
                            "protocol": "Tcp",
                            "backendAddressPool": {
                                "id": "[variables('bePoolId')]"
                            },
                            "probe": {
                                "id": "[variables('probeId')]"
                            }
                        }
                    }
                ]
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIpAddresses/', variables('alb-pipN'))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('vmN'), copyIndex())]",
            "zones": "[split(string(add(mod(copyIndex(),3),1)), ',')]",
            "apiVersion": "2017-12-01",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "vmcopy",
                "count": 2
            },
            "plan": {
                "name": "[parameters('vmSku')]",
                "publisher": "citrix",
                "product": "[parameters('ADCVersion')]"
            },
            "properties": {
                "osProfile": {
                    "computerName": "[concat(variables('vmN'), copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "customData": "[base64(concat(' \n<NS-PRE-BOOT-CONFIG> ', '\n<NS-CONFIG>', '\nset systemparameter -promptString %u@%s', '\nadd ha node 1 ', reference(concat(variables('nicN'), sub(1, copyIndex()),'-01')).ipConfigurations[0].properties.privateIPAddress, ' -inc ENABLED', '\nadd ns ip ', reference(concat(variables('nicN'), copyIndex(), '-11')).ipConfigurations[0].properties.privateIPAddress, ' ', parameters('subnetAddressMask-11'), ' -type SNIP', '\nadd ns ip ', reference(concat(variables('nicN'), copyIndex(), '-12')).ipConfigurations[0].properties.privateIPAddress, ' ', parameters('subnetAddressMask-12'), ' -type SNIP', '\nset ns rpcNode ', reference(concat(variables('nicN'), copyIndex(),'-01')).ipConfigurations[0].properties.privateIPAddress,' -password ', parameters('rpcNodePassword'), ' -secure YES', '\nset ns rpcNode ', reference(concat(variables('nicN'), sub(1, copyIndex()),'-01')).ipConfigurations[0].properties.privateIPAddress,' -password ', parameters('rpcNodePassword'), ' -secure YES', '\n</NS-CONFIG> ', '\n</NS-PRE-BOOT-CONFIG>'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "citrix",
                        "offer": "[parameters('ADCVersion')]",
                        "sku": "[parameters('vmSku')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        }
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId( 'Microsoft.Network/networkInterfaces', concat(variables('nicN'), copyIndex(), '-01'))]",
                            "properties": {
                                "primary": true
                            }
                        },
                        {
                            "id": "[resourceId( 'Microsoft.Network/networkInterfaces', concat(variables('nicN'), copyIndex(), '-11'))]",
                            "properties": {
                                "primary": false
                            }
                        },
                        {
                            "id": "[resourceId( 'Microsoft.Network/networkInterfaces', concat(variables('nicN'), copyIndex(), '-12'))]",
                            "properties": {
                                "primary": false
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId( 'Microsoft.Storage/storageAccounts', variables('saN')), '2017-10-01').primaryEndpoints['blob']]"
                    }
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicN'), copyIndex(), '-01')]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicN'), sub(1,copyIndex()), '-01')]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicN'), copyIndex(), '-11')]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicN'), sub(1,copyIndex()), '-11')]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicN'), copyIndex(), '-12')]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicN'), sub(1,copyIndex()), '-12')]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('saN'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('saN')]",
            "apiVersion": "2017-10-01",
            "kind": "Storage",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS"
            },
            "properties": {}
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('vnetName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('snetAddressPrefix-01')]",
                        "[parameters('snetAddressPrefix-11')]",
                        "[parameters('snetAddressPrefix-12')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('snetName-01')]",
                        "properties": {
                            "addressPrefix": "[parameters('snetAddressPrefix-01')]"
                        }
                    },
                    {
                        "name": "[parameters('snetName-11')]",
                        "properties": {
                            "addressPrefix": "[parameters('snetAddressPrefix-11')]"
                        }
                    },
                    {
                        "name": "[parameters('snetName-12')]",
                        "properties": {
                            "addressPrefix": "[parameters('snetAddressPrefix-12')]"
                        }
                    }
                ]
            },
            "condition": "[equals(parameters('vnetNewOrExisting'),'new')]"
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicN'), copyIndex(), '-01')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "niccopy-01",
                "count": 2
            },
            "properties": {
                "enableAcceleratedNetworking": "[parameters('acceleratedNetworkingManagement')]",
                "ipConfigurations": [
                    {
                        "name": "ipconfig01",
                        "properties": {
                            "subnet": {
                                "id": "[variables('snetRef-01')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', concat(variables('vmN'), copyIndex(), variables('mgmt-pipN-suffix')))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId( 'Microsoft.Network/networkSecurityGroups', concat(variables('nsgN'), copyIndex(), '-01'))]"
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]",
                "[concat('Microsoft.Network/publicIpAddresses/', variables('vmN'), copyIndex(), variables('mgmt-pipN-suffix'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgN'), copyIndex(), '-01')]"
            ]
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicN'), copyIndex(), '-11')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "niccopy-11",
                "count": 2
            },
            "properties": {
                "enableAcceleratedNetworking": "[parameters('acceleratedNetworkingClient')]",
                "ipConfigurations": [
                    {
                        "name": "ipconfig11",
                        "properties": {
                            "subnet": {
                                "id": "[variables('snetRef-11')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[variables('bePoolId')]"
                                }
                            ]
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId( 'Microsoft.Network/networkSecurityGroups', concat(variables('nsgN'), copyIndex(), '-11'))]"
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgN'), copyIndex(), '-11')]",
                "[concat('Microsoft.Network/loadBalancers/', variables('lbN'))]"
            ]
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicN'), copyIndex(), '-12')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "niccopy-12",
                "count": 2
            },
            "properties": {
                "enableAcceleratedNetworking": "[parameters('acceleratedNetworkingServer')]",
                "ipConfigurations": [
                    {
                        "name": "ipconfig12",
                        "properties": {
                            "subnet": {
                                "id": "[variables('snetRef-12')]"
                            },
                            "privateIPAllocationMethod": "Dynamic"
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId( 'Microsoft.Network/networkSecurityGroups', concat(variables('nsgN'), copyIndex(), '-12'))]"
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgN'), copyIndex(), '-12')]"
            ]
        },
        {
            "type": "Microsoft.Network/publicIpAddresses",
            "name": "[variables('alb-pipN')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIpAllocationMethod": "static",
                "publicIpAddressVersion": "IPv4"
            }
        },
        {
            "type": "Microsoft.Network/publicIpAddresses",
            "name": "[concat(variables('vmN'), copyIndex(), variables('mgmt-pipN-suffix'))]",
            "zones": "[split(string(add(mod(copyIndex(),3),1)), ',')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard"
            },
            "copy": {
                "name": "ipcopy",
                "count": 2
            },
            "properties": {
                "publicIpAllocationMethod": "static",
                "publicIpAddressVersion": "IPv4"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[concat(variables('nsgN'), copyIndex(), '-01')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "nsgcopy-01",
                "count": 2
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-ssh",
                        "properties": {
                            "priority": 1000,
                            "sourceAddressPrefix": "[parameters('restrictedSSHaccessCIDR')]",
                            "protocol": "TCP",
                            "destinationPortRange": "22",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    },
                    {
                        "name": "autoscale-daemon",
                        "properties": {
                            "priority": 1001,
                            "sourceAddressPrefix": "*",
                            "protocol": "TCP",
                            "destinationPortRange": "9001",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[concat(variables('nsgN'), copyIndex(), '-11')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "nsgcopy-11",
                "count": 2
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "allow-http-https-from-client",
                        "properties": {
                            "priority": 1000,
                            "sourceAddressPrefix": "*",
                            "protocol": "TCP",
                            "destinationPortRanges": [ "80", "443" ],
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[concat(variables('nsgN'), copyIndex(), '-12')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "nsgcopy-12",
                "count": 2
            }
        }
    ]
}
